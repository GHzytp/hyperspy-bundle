name: Release

on: [push]
  #push:
  #   Sequence of patterns matched against refs/tags
  #  tags:
  #  - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs: 
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: ${{ matrix.config.os }}
    #needs: create_release
    runs-on: ${{ matrix.config.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: macos
            INSTALLER_EXTENSION: pkg
          - os: ubuntu
            INSTALLER_EXTENSION: sh
          - os: windows
            INSTALLER_EXTENSION: exe
    env:
      INSTALLER_EXTENSION: ${{ matrix.config.INSTALLER_EXTENSION }}
      MPLBACKEND: agg
      TEST_DEPS: pytest pytest-mpl
      LIB_TO_TEST: hyperspy

    steps:
      - uses: actions/checkout@v2
      - uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: true
          python-version: 3.7

      - shell: bash -l {0}
        name: Conda info
        run: |
          conda info
          conda list

      - shell: bash -l {0}
        name: Install constructor
        run: |
          conda install constructor
          pip install https://github.com/conda/constructor/archive/master.zip --no-deps

      - shell: bash -l {0}
        name: Build distribution
        run: |
          constructor -v conda_distribution

      - name: sha256sum
        if: runner.os == 'Linux'
        run: |
          shasum -a 256 HyperSpy-*.${{ env.INSTALLER_EXTENSION }}

      - name: Install new distribution (Linux)
        if: runner.os == 'Linux'
        env:
          install_dir: '${{ github.workspace }}/new_distribution'
        run: |
          echo ::set-env name=install_dir::${{ env.install_dir }}
          bash HyperSpy-bundle*.sh -b -p ${{ env.install_dir }}

      - name: Install new distribution (MacOS)
        if: runner.os == 'macos'
        run: |
          echo "::set-env name=install_dir::/Users/runner"
          installer -pkg HyperSpy-*.pkg -target CurrentUserHomeDirectory

      - name: Install new distribution (Windows)
        if: runner.os == 'windows'
        env:
          install_dir: '${{ github.workspace }}\new_distribution'
        shell: powershell
        run: |
          echo "::set-env name=install_dir::${{ env.install_dir }}"
          $fname = Get-ChildItem HyperSpy*.exe
          echo "::set-env name=asset_name::$fname"
          Start-Process -Wait -FilePath $fname -ArgumentList "/S /AddToPath=0 /RegisterPython=0 /NoScripts=1 /D=${{ env.install_dir }}"

      - uses: actions/upload-artifact@v2
        with:
          path: HyperSpy-*.${{ env.INSTALLER_EXTENSION }}

      - shell: bash -l {0}
        name: Info new distribution
        run: |
          conda activate "${{ env.install_dir }}"
          conda info
          conda list

      - shell: bash -l {0}
        name: Test new distribution
        run: |
          conda activate "${{ env.install_dir }}"
          conda install ${{ env.TEST_DEPS }}
          pytest --pyargs ${{ env.LIB_TO_TEST }}

      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./${{ env.asset_name }}
          asset_name: ${{ env.asset_name }}
          asset_content_type: 
