name: Release

on: [push]
  #push:
  #   Sequence of patterns matched against refs/tags
  #  tags:
  #  - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  #create_release:
  #  name: Create Release
  #  runs-on: ubuntu-latest
  #  outputs: 
  #    upload_url: ${{ steps.create_release.outputs.upload_url }}
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v2
  #    - name: Create Release
  #      id: create_release
  #      uses: actions/create-release@v1
  #      env:
  #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
  #      with:
  #        tag_name: ${{ github.ref }}
  #        release_name: Release ${{ github.ref }}
  #        draft: false
  #        prerelease: false

  build:
    name: ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: macos
            INSTALLER_EXTENSION: pkg
            INSTALL_DIR: /Users/runner/work
          - os: ubuntu
            INSTALLER_EXTENSION: sh
            INSTALL_DIR: ${{ github.workspace }}/install
          - os: windows
            INSTALLER_EXTENSION: exe
            INSTALL_DIR: ${{ github.workspace }}\install
    env:
      INSTALLER_EXTENSION: ${{ matrix.config.INSTALLER_EXTENSION }}
      INSTALL_DIR: ${{ matrix.config.INSTALL_DIR }}

    steps:
      - uses: actions/checkout@v2
      - uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: true
          python-version: 3.7

      - shell: bash -l {0}
        name: Conda info
        run: |
          conda info
          conda list

      - shell: bash -l {0}
        name: Install constructor
        run: |
          conda install constructor
          pip install https://github.com/conda/constructor/archive/master.zip --no-deps

      - shell: bash -l {0}
        name: Build distribution
        run: |
          constructor -v conda_distribution

      - name: sha256sum
        if: runner.os == 'Linux'
        run: |
          shasum -a 256 HyperSpy-*.${{ env.INSTALLER_EXTENSION }}

      - name: Install new distribution
        run: |
          ls ${{ github.workspace }}
          ls $${{ github.HOME }}

      - uses: actions/upload-artifact@v2
        with:
          path: HyperSpy-*.${{ env.INSTALLER_EXTENSION }}

      #- name: Upload Release Asset
      #  uses: actions/upload-release-asset@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    upload_url: ${{ needs.create_release.outputs.upload_url }}
      #    asset_path: ./dist/*.whl
      #    asset_name: 
      #    asset_content_type: 

      #- name: Publish wheels to PyPI
      #  env:
      #    TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      #    TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      #  run: |
      #    python -m pip install twine
      #    python -m twine upload dist/*.whl
